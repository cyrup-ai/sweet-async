{
  "permissions": {
    "allow": [
      "Bash(cargo check:*)",
      "Bash(cargo test:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(sed:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(cargo build:*)",
      "Bash(CARGO_INCREMENTAL=0 cargo check -p sweet_async_tokio)",
      "Bash(CARGO_INCREMENTAL=0 cargo check -p sweet_async_tokio -- --package=task::adaptive)",
      "Bash(CARGO_INCREMENTAL=0 cargo check -v)",
      "Bash(CARGO_INCREMENTAL=0 cargo check)",
      "Bash(grep:*)",
      "Bash(CARGO_INCREMENTAL=0 cargo check --package sweet_async_tokio)",
      "Bash(cargo nextest:*)",
      "Bash(perl:*)",
      "mcp__server-sequential-thinking__sequentialthinking",
      "Bash(zola serve:*)",
      "Bash(rm:*)",
      "Bash(cp:*)",
      "WebFetch(domain:www.getzola.org)",
      "Bash(chmod:*)",
      "Bash(./generate-images-list.sh:*)",
      "Bash(cat:*)",
      "Bash(touch:*)",
      "WebFetch(domain:docs.rs)",
      "WebFetch(domain:docs.rig.rs)",
      "WebFetch(domain:github.com)",
      "Bash(tree-sitter:*)",
      "Bash(brew search:*)",
      "Bash(ast-grep:*)",
      "Bash(rustc:*)",
      "Bash(./generate_plan.sh:*)",
      "WebFetch(domain:ast-grep.github.io)",
      "Bash(diff:*)",
      "Bash(jq:*)",
      "Bash(comm:*)",
      "Bash(cargo doc:*)",
      "mcp__desktop-commander__read_file",
      "mcp__desktop-commander__list_directory",
      "mcp__desktop-commander__start_process",
      "mcp__desktop-commander__read_process_output",
      "mcp__desktop-commander__edit_block",
      "mcp__desktop-commander__search_code",
      "mcp__desktop-commander__write_file",
      "mcp__desktop-commander__search_files",
      "mcp__desktop-commander__interact_with_process",
      "Bash(rg:*)",
      "Bash(cargo run:*)",
      "Bash(git clone:*)",
      "mcp__desktop-commander__force_terminate",
      "mcp__desktop-commander__get_config",
      "WebFetch(domain:internals.rust-lang.org)",
      "Bash(for trait in \"ComparatorSequence\" \"IdSequence\" \"SizeExt\" \"TimeExt\" \"TimestampSequence\")",
      "Bash(do echo \"=== $trait ===\")",
      "Bash(done)",
      "Bash(for trait in \"StreamingEvent\" \"Collector\" \"SenderEvent\" \"ReceiverEvent\" \"FinalEvent\")"
    ],
    "deny": []
  },
  "enableAllProjectMcpServers": false
}